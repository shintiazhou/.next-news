import Head from "next/head";
import { GetStaticPaths, GetStaticProps } from "next";
import { INews } from "../../models/INews";
import HeadingNews from "../../components/HeadingNews";
import { ParsedUrlQuery } from "querystring";
import newsCategories from "../../data/newsCategories";
import { baseURL } from "../../services/config";

type Props = {
  newsData: INews[];
};

const Home = ({ newsData }: Props) => {
  return (
    <div>
      <Head>
        <title>Next News</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="text-primary container mx-auto">
        {newsData && <HeadingNews headingNews={newsData[0]} />}
      </main>
    </div>
  );
};

interface IParams extends ParsedUrlQuery {
  category: string;
}

export const getStaticPaths: GetStaticPaths = async () => {
  const paths = newsCategories.map((category) => ({
    params: { category: category },
  }));
  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const { category } = context.params as IParams;
  const res = await fetch(`${baseURL}&category=${category}&pageSize=10`);
  const newsData = await res.json();

  return {
    props: {
      newsData: newsData.articles || null,
    },
  };
};

export default Home;
